#!/usr/bin/env bash
#
# This script turns yazi into a side-bar style file picker (think VS Code) when using Zellij. It
# works by assuming you have a Zellij layout that has yazi on the lefti (or top), and your editor
# on the right (or bottom). When you open a file or directory in yazi, it switches to the next pane
# (which is hopefully your editor) and types the :open command to open the file or directory in the
# editor. Once done opening the file(s) in your editor, yazi will re-open (and if you chose a
# directory, that directory will be the new working dir).

# Configurable constants
#
# Character to open command mode in editor
EDITOR_COMMAND_PREFIX=":"
# Editor open command, e.g. "open" or "vsplit" in helix, "edit" in nvim, etc.
EDITOR_OPEN_COMMAND="open"
# Editor command to change the editor's current working directory
EDITOR_CD_COMMAND="cd"
# Location of yazi config toml file
# YAZI_CONFIG="$HOME/.config/zide"

# Optional params
# You can optionall customize the command used to open files in your editor, the location of a
# custom config file for yazi, and the working directory.
#
# Command to perform on the paths, available commands will be based on your editor
command=${1:-${EDITOR_OPEN_COMMAND}}
# Yazi picker config location
config=${2:-"${ZIDE_DIR}/yazi"}
# Optionally specify a working directory to open yazi into
working_dir=${3} 

# Point yazi to the config directory for opening as a single layout pane
export YAZI_CONFIG_HOME="${config}"

paths=$(yazi ${working_dir} --chooser-file=/dev/stdout | while read -r; do printf "%q " "$REPLY"; done)
path=${paths[0]}

# Focus editor pane, must be the next pane after yazi
zellij action focus-next-pane

# Grab the directory of the first provided path
dir=${path}
if [[ -f "${path}" ]]; then
	dir=$(dirname "${path}")
fi

# If we're trying to open a single path and it's a directory, change the working dir to it in our
# editor. This ensures any other commands in our editor (such as :open, :mv, etc) have the correct
# cwd set.
if [ ! -f "${path}" ] && [ ${#paths[@]} -eq 1 ]; then
	zellij action write 27 # send <Escape> key to enter NORMAL mode
	zellij action write-chars "${EDITOR_COMMAND_PREFIX}${EDITOR_CD_COMMAND} ${path}"
	zellij action write 13 # send <Enter> key
	sleep 0.25
fi

# Open paths in the editor
if [[ -n "${paths}" ]]; then
	zellij action write 27 # send <Escape> key to enter NORMAL mode
	zellij action write-chars "${EDITOR_COMMAND_PREFIX}${command} ${paths}"
	zellij action write 13 # send <Enter> key
fi

# Yazi exits once we pick paths, so re-open it manually by re-running this very script, and set
# the working dir to be the dir of the first path
"$0" ${command} ${config} ${dir}
